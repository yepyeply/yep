while((opt=getopt(argc,argv,"a:l:w:c:o:")) != -1)
    {
        switch(opt)
        {
        	//-a 指令显示字符数，单词数，行数 
            case 'a':
                l = w = c = 1; 
                strcpy(inputFileName,optarg);
                break;
            //-l 指令显示行数 
            case 'l': 
                l = 1;
                strcpy(inputFileName,optarg);
                break;  
            //-w 指令显示单词数 
            case 'w': 
                w = 1;
                strcpy(inputFileName,optarg); 
                break;  
            //-c 指令显示字符数 
            case 'c': 
                c = 1;
                strcpy(inputFileName,optarg);
                break;
        	//-o 用于输出文件 
            case 'o':
                o = 1;
                strcpy(outputFileName,optarg);  
        }
    }
    
    int countFile(char *filename){
    FILE *fp;  // 指向文件的指针
    char buffer[1000];  //缓冲区，存储读取到的每行的内容
    int bufferLength;  // 缓冲区中实际存储的内容的长度
    int i;  // 当前读到缓冲区的第i个字符
    char c;  // 读取到的字符
    int isBlank = 0;  // 上个字符是否是空格
    int charNumber = 0;  // 当前行的字符数
    int wordNumber = 0; // 当前行的单词数
    if( (fp=fopen(filename, "rb")) == NULL ){
        perror(filename);
        return -1;
    }
    // 每次读取一行数据，保存到buffer，每行最多只能有1000个字符
    while(fgets(buffer, 1000, fp) != NULL){
        bufferLength = strlen(buffer);
        // 遍历缓冲区的内容
        for(i=0; i<bufferLength; i++){
            c = buffer[i];
            if( c==' ' || c=='\t'){  // 遇到空格
                !isBlank && wordNumber++;  // 如果上个字符不是空格，那么单词数加1
                isBlank = 1;
            }else if(c!='\n'&&c!='\r'){  // 忽略换行符
                charNumber++;  // 如果既不是换行符也不是空格，字符数加1
                isBlank = 0;
            }
        }
        !isBlank && wordNumber++;  // 如果最后一个字符不是空格，那么单词数加1
        isBlank = 1;  // 每次换行重置为1
        // 一行结束，计算总字符数、总单词数、总行数
        lineCount++;  // 总行数
        charCount += charNumber;  // 总字符数
        wordCount += wordNumber;  // 总单词数
        // 置零，重新统计下一行
        charNumber = 0;
        wordNumber = 0;
    }
    fclose(fp);
    return 1;
}

int writeOutput(char *outputFile, char *inputFile)
{
    FILE *fp = fopen(outputFile,"w");
    if (fp == NULL)
        return -1;
    fprintf(fp, "%s,", inputFile);
    if (c)
    {
    	printf("%s,字符数:%d\n",inputFile,charCount); 
        fprintf(fp, "字符数: %d ", charCount);
    }
    if (w)
    {
    	printf("%s,单词数:%d\n",inputFile,wordCount); 
        fprintf(fp, "单词数: %d ", wordCount);
    }
    if (l)
    {
    	printf("%s,行数:%d\n",inputFile,lineCount); 
        fprintf(fp, "行数: %d.\n", lineCount);
    }
    fclose(fp);
}
